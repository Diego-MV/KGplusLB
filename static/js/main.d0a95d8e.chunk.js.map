{"version":3,"sources":["components/Error.jsx","components/Formulario.jsx","components/Resultado.jsx","components/Spinkit.jsx","lift.png","App.js","reportWebVitals.js","index.js"],"names":["ErrorAlert","styled","div","Error","setError","description","className","role","type","class","onClick","exist","Button","input","Label","label","Input","Formulario","sendKg","sendLb","useState","kg","setKg","lb","setLb","error","onSubmit","e","preventDefault","isNaN","parseFloat","onChange","target","value","ResultadoDiv","Precio","p","Resultado","resultado","String","slice","Spinkit","Contenedor","Imagen","img","Heading","App","loading","setLoading","setResultado","useEffect","setTimeout","lbTokg","res","Calculo","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0a95d8e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from '@emotion/styled';\r\n\r\nconst ErrorAlert = styled.div`\r\n  position: absolute;\r\n  top: -15%;\r\n  left: 15%;\r\n`;\r\n\r\nconst Error = ({setError,description}) => {\r\n  const handleCloseError = () =>{\r\n    setError({\r\n      exist: false,\r\n      description: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ErrorAlert className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n  \r\n      <strong>Ups!</strong> {description}.\r\n      <button type=\"button\" class=\"btn-close\" onClick={() => handleCloseError()}></button>\r\n\r\n    </ErrorAlert>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport Error from \"./Error\";\r\n\r\nconst Button = styled.input`\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  background-color: #f6931a;\r\n  border: none;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  color: #fff;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #bf6900;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursivel;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display:block;\r\n`;\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`;\r\nconst Formulario = ({ sendKg, sendLb }) => {\r\n  const [ kg, setKg ] = useState(0);\r\n  const [ lb, setLb ] = useState(0);\r\n  const [ error , setError ] = useState({exist: false, description: \"\"})\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(isNaN(parseFloat(kg))) {setKg(0)}\r\n    if(isNaN(parseFloat(lb))) {setLb(0)}\r\n\r\n    if ( parseFloat(kg) < 0 || parseFloat(lb) < 0 ) {\r\n      setError({ exist: true, description: \"Ingresa nÃºmeros positivos\" });\r\n      return;\r\n    }\r\n    \r\n    setError({ exist: false, description: \"\" });\r\n    sendKg(parseFloat(kg));\r\n    sendLb(parseFloat(lb));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"position-relative mb-2\">\r\n      {error.exist ? (\r\n        <Error setError={setError} description={error.description} />\r\n      ) : null}\r\n      <div class=\"m-3\">\r\n        <Label>Kg</Label>\r\n        <Input onChange={(e) => setKg(e.target.value)} value={kg}></Input>\r\n      </div>\r\n      <div class=\"m-3\">\r\n      <Label>Lb</Label>\r\n      <Input onChange={(e) => setLb(e.target.value)} value={lb}></Input>\r\n      </div>\r\n      <Button type=\"submit\" value=\"Calcular\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ResultadoDiv = styled.div`\r\n  color: #12526b;\r\n  font-family: \"Bebas Neue\", cursive;\r\n  text-align: center;\r\n  max-height: 40px;\r\n`;\r\nconst Precio = styled.p`\r\n  font-size: 30px;\r\n  span {\r\n    color: #f6931a;\r\n  }\r\n`;\r\n\r\nconst Resultado = ({ resultado }) => {\r\n    return (\r\n    <div className=\"card mb-2\">\r\n      <div className=\"card-body \">\r\n        <ResultadoDiv>\r\n          <Precio>\r\n            El peso total es: <span>{String(resultado).slice(0,6)} KG</span>\r\n          </Precio>\r\n        </ResultadoDiv>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resultado;\r\n","import React from \"react\";\r\n\r\nconst Spinkit = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"cube1\"></div>\r\n      <div className=\"cube2\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinkit;\r\n","export default __webpack_public_path__ + \"static/media/lift.e2a940e9.png\";","import React, { useState, useEffect } from 'react'\nimport styled from '@emotion/styled';\n\nimport Formulario from './components/Formulario';\nimport Resultado from './components/Resultado';\nimport Spinkit from './components/Spinkit';\n\nimport imagen from './lift.png';\n\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media (min-width:992px){\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    column-gap: 2rem;\n  }\n`;\nconst Imagen = styled.img`\n  margin-top: 5rem;\n  align-items: center;\n`;\nconst Heading = styled.div`\n  font-family: 'Bebas Neue', cursive;\n  color: #FFF;\n  text-align: left;\n  font-weight: 600;\n  font-size: 40px;\n  margin-bottom: 50px;\n  margin-top: 20px;\n\n  &::after{\n    content: '';\n    width: 120px;\n    height: 6px;\n    background-color: #f6931a;\n    display: block;\n  }\n`;\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [ kg, setKg ] = useState(0);\n  const [ lb, setLb ] = useState(0);\n  const [ resultado, setResultado ] = useState(0);\n  \n  useEffect(() => {\n    \n    const Calculo = () => {\n      if(isNaN(parseFloat(kg))) {setKg(0)}\n      if(isNaN(parseFloat(lb))) {setLb(0)}\n      const lbTokg = parseFloat(lb) * 0.454;\n      const res = parseFloat(kg) + parseFloat(lbTokg);\n      if(isNaN(res)){\n        setResultado(0);\n        return;\n      }\n      setResultado(res)\n    }\n    if (kg === \"\" && lb === \"\") return \n    else {\n      setLoading(true);\n      setTimeout( () => {\n        Calculo()\n        setLoading(false);\n      }, 500)\n    }\n  }, [resultado, kg, lb])\n   \n  \n  return (\n    <div className=\"container-fluid w-100 h-100\">\n      <Contenedor className='row'>\n        <div className=\"d-none d-sm-none d-lg-block d-md-block d-xl-block col-lg-4\">\n          <Imagen  src={imagen} alt=\"img lift\" />\n        </div>\n        {/* <div className=\"col-12 d-block d-sm-block d-md-none w-100 d-flex justify-content-center align-items-center\">\n          <Imagen height={100} src={imagen} alt=\"img cripto\" />\n        </div> */}\n\n        <div className=\"col-8 w-100\">\n          <Heading>Calcula el peso de la barra</Heading>\n          <Formulario sendKg={setKg} sendLb={setLb}/>\n          {loading\n            ? <Spinkit />\n            : <Resultado resultado={resultado}/>}\n        </div>\n      </Contenedor>\n      <div className=\"position-absolute bottom-0 end-0\">v1.1</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}